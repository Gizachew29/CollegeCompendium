[
	{
		"id": "mit-Spring-6.046J",
		"title": "6.046J: Design and Analysis of Algorithms",
		"source": "MIT",
		"year": "Spring 2015",
		"url": "http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/index.htm",
		"desc": "This is an intermediate algorithms course with an emphasis on teaching techniques for the design and analysis of efficient algorithms, emphasizing methods of application. Topics include divide-and-conquer, randomization, dynamic programming, greedy algorithms, incremental improvement, complexity, and cryptography.",
		"tags": ["6.046J"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "mit-Spring-6.851",
		"title": "6.851: Advanced Data Structures",
		"source": "MIT",
		"year": "Spring 2014",
		"url": "http://courses.csail.mit.edu/6.851/spring14/index.html",
		"desc": "Data structures play a central role in modern computer science. You interact with data structures even more often than with algorithms (think Google, your mail server, and even your network routers). In addition, data structures are essential building blocks in obtaining efficient algorithms. This course covers major results and current research directions in data structures:",
		"tags": ["6.851"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "mit-Fall-6.854",
		"title": "6.854: Advanced Algorithms",
		"source": "MIT",
		"year": "Fall 2020",
		"url": "http://courses.csail.mit.edu/6.854/current/",
		"desc": "This course is designed to be a capstone course in algorithms that surveys some of the most powerful algorithmic techniques and key computational models. It aims to bring the students up to the level where they can read and understand research papers.",
		"tags": ["6.854"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "caltech-Spring-CS156",
		"title": "CS156: Learning from Data",
		"source": "Caltech",
		"year": "Spring 2012",
		"url": "https://work.caltech.edu/telecourse.html",
		"desc": "This is an introductory course in machine learning (ML) that covers the basic theory, algorithms, and applications. ML is a key technology in Big Data, and in many financial, medical, commercial, and scientific applications.",
		"tags": ["CS156"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "CMU-15-459-Fall",
		"title": "15-459: Quantum Computation and Information at CMU",
		"source": "Carnegie Mellon",
		"year": "Fall 2018",
		"url": "https://www.youtube.com/playlist?list=PLm3J0oaFux3YL5qLskC6xQ24JpMwOAeJz",
		"desc": "Covers the basics of quantum computing, with a little bit of quantum information theory at the end.",
		"tags": ["15-459"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "harvard-Fall-CS224",
		"title": "CS224: Advanced Algorithms",
		"source": "Harvard",
		"year": "Fall 2014",
		"url": "http://people.seas.harvard.edu/~minilek/cs224/fall14/index.html",
		"desc": "An algorithm is a well-defined procedure for carrying out some computational task. Typically the task is given, and the job of the algorithmist is to find such a procedure which is efficient, for example in terms of processing time and/or memory consumption. CS 224 is an advanced course in algorithm design, and topics we will cover include the word RAM model, data structures, amortization, online algorithms, linear programming, semidefinite programming, approximation algorithms, hashing, randomized algorithms, fast exponential time algorithms, graph algorithms, and computational geometry.",
		"tags": ["CS224"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "waterloo-Winter-CS442",
		"title": "CS442: Principles of Programming Languages",
		"source": "Waterloo",
		"year": "Winter 2021",
		"url": "https://student.cs.uwaterloo.ca/~cs442",
		"desc": "CS442 is rightly named: The principles of programming languages. This course covers the ideas underpinning programming languages, by covering the formal, mathematical model behind programming languages as calculi, and then discussing many programming language paradigms, and how these paradigms affect both the formal semantics and the implementation of language interpreters, compilers, and virtual machines.",
		"tags": ["CS442"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "cornell-Spring-CS6120",
		"title": "CS6120: Advanced Compilers",
		"source": "Cornell",
		"year": "Spring 2021",
		"url": "https://www.cs.cornell.edu/courses/cs6120",
		"desc": "This is a hands-on course about implementing programming languages. It covers intermediate representations, classic optimization, runtime systems, and more advanced techniques such as parallelization, just-in-time compilation, and garbage collection. Course work consists of reading and discussing both classic and modern research papers and implementation projects based on the LLVM compiler infrastructure.",
		"tags": ["CS6120"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "tufts-Spring-COMP15",
		"title": "COMP15: Data Structures",
		"source": "Tufts",
		"year": "Spring 2021",
		"url": "http://www.cs.tufts.edu/comp/15",
		"desc": "A second course in computer science. Data structures and algorithms are studied through major programming projects in the C++ programming language. Topics include linked lists, trees, graphs, dynamic storage allocation, and recursion.",
		"tags": ["COMP15"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "penn-Spring-CIS521",
		"title": "CIS521: Artificial Intelligence",
		"source": "Penn",
		"year": "Spring 2021",
		"url": "http://artificial-intelligence-class.org/lectures.html#now",
		"desc": "This course investigates algorithms to implement resource-limited knowledge-based agents which sense and act in the world. Topics include, search, machine learning, probabilistic reasoning, natural language processing, knowledge representation and logic. After a brief introduction to the language, programming assignments wil l be in Python.",
		"tags": ["CIS521"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": false
		}
	},
	{
		"id": "uiuc-Fall-CS419:",
		"title": "CS419: Scientific Visualization",
		"source": "UIUC",
		"year": "Fall 2020",
		"url": "https://courses.physics.illinois.edu/cs519/fa2020/",
		"desc": "Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering",
		"tags": ["CS419"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "brown-Fall-CSCI0530:",
		"title": "CSCI0530: Coding the Matrix: an Introduction to Linear Algebra for Computer Science",
		"source": "Brown",
		"year": "Fall 2017",
		"url": "http://cs.brown.edu/courses/csci0530/current/index.htm",
		"desc": "The aim of this course is to provide students interested in computer science an introduction to vectors and matrices and their use in CS applications. The course will be driven by applications from areas chosen from among: combinatorial optimization, computer vision, cryptography, game theory, graphics, information retrieval and web search, maching learning, and scientific visualization. For example, students will learn Google's PageRank method for ranking web pages. This course satisfies the linear algebra requirement for the Computer Science Sc.B.and the Applied-Math/CS Sc.B.",
		"tags": ["CSCI0530"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "washington-Spring-CSE",
		"title": "CSE 142: Computer Programming I",
		"source": "Washington",
		"year": "Spring 2020",
		"url": "https://courses.cs.washington.edu/courses/cse142/20sp/",
		"desc": "This course provides an introduction to computer science using the Java programming language. CSE142 is primarily a programming course, but the focus is on the problem solving techniques common in computer science. No prior programming experience is assumed, although students should know the basics of using a computer (e.g., using a web browser and word processing program) and should be competent with math through Algebra I. Students with significant prior programming experience should consider skipping cse142 and taking cse143 (we allow students to do so without any special permission)",
		"tags": ["CSE142"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "berkeley-Spring-CS",
		"title": "CS 170: Efficient Algorithms and Intractable Problems",
		"source": "Berkeley",
		"year": "Spring 2021",
		"url": "https://cs170.org/",
		"desc": "Concept and basic techniques in the design and analysis of algorithms; models of computation; lower bounds; algorithms for optimum search trees, balanced trees and UNION-FIND algorithms; numerical and algebraic algorithms; combinatorial algorithms. Turing machines, how to count steps, deterministic and nondeterministic Turing machines, NP-completeness. Unsolvable and intractable problems.",
		"tags": ["CS17"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "CMU-15-110-Spring",
		"title": "15-110: Principles of Computing",
		"source": "Carnegie Mellon",
		"year": "Spring 2021",
		"url": "https://cs-cmuq.github.io/110-www/#main",
		"desc": "The course will take the student along the way that starts from a complex, possibly large problem to solve, and then move step by step to itsÂ abstraction, to its formalization into anÂ algorithmic recipe, to the encoding of the algorithm using theÂ constructs of the python language, to the run-timeÂ executionÂ andÂ error correctionÂ of the programming code, to theÂ efficiency analysisÂ of the developed algorithm and code.",
		"tags": ["15-110"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	},
	{
		"id": "CMU-10-708-Spring",
		"title": "10-708: Probabilistic Graph Models",
		"source": "Carnegie Mellon",
		"year": "Spring 2019",
		"url": "https://sailinglab.github.io/pgm-spring-2019/",
		"desc": "Many of the problems in artificial intelligence, statistics, computer systems, computer vision, natural language processing, and computational biology, among many other fields, can be viewed as the search for a coherent global conclusion from local information. The probabilistic graphical models framework provides an unified view for this wide range of problems, enables efficient inference, decision-making and learning in problems with a very large number of attributes and huge datasets. This graduate-level course will provide you with a strong foundation for both applying graphical models to complex problems and for addressing core research topics in graphical models.",
		"tags": ["10-708"],
		"contains": {
			"videos": true,
			"written": true,
			"assignments": true
		}
	}
]
